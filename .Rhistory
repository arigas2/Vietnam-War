Week = week2,
predicted.prob=pred.probs2)
View(fg.logistic.data2)
fg.logistic.data2 %<%
ggplot(aes(x=Yards, y=predicted.prob)) +
geom_line()
fg.logistic.data2 %<%
ggplot(aes(x=Yards, y=predicted.prob)) +
geom_line()
fg.logistic.data2 %>%
ggplot(aes(x=Yards, y=predicted.prob)) +
geom_line()
fg.logistic.data2 %>%
ggplot(aes(x=Yards, y=predicted.prob)) +
geom_line(aes(color= factor(Week)))
#email data in the openintro package
library(openintro)
email
View(email)
?email
email.to <- filter(email, from = 0)
email.notfrom <- filter(email, from == 0)
View(email.notfrom)
email.model <- glm(Spam ~ . , data = email, family = "binomial")
email.model <- glm(spam ~ . , data = email, family = "binomial")
step(email.model)
email.model.final <- glm(formula = spam ~ to_multiple + from + sent_email + time +
image + attach + dollar + winner + inherit + viagra + password +
num_char + line_breaks + format + re_subj + urgent_subj +
exclaim_mess + number, family = "binomial", data = email)
summary(email.model.final)
email.model.final <- glm(spam ~ to_multiple + exclaim_mess, data = email)
email.model.final <- glm(spam ~ to_multiple + number, data = email)
summary(email.model.final)
summary(email.model.final)
#Read in evals data
evals <- read.csv(file.choose())
table(evals$ethnicity, evals$gender)
View(fg)
#Conduct two-prop test
prop.test(c(36,28), n= c(195, 268))
prop.test(table(evals$ethnicity, evals$gender))
table(evals$ethnicity, evals$gender)
chisq.test(table(evals$ethnicity, evals$gender))
pnorm(.769, 0, 1, lower.tail = FALSE)
qnorm(.99, lower.tail = FALSE)
qnorm(.99)
qnorm(.95)
pnorm(.495, lower.tail = FALSE)
?t.test
reaction.times <- c(368, 350, 271, 268, 314,
285, 317, 274, 329, 254,
267, 293, 369, 320, 274,
296, 433, 299)
t.test(reaction.times)$conf
#Conduct one-sample t-test
t.test(reaction.times, mu = 300)
knitr::opts_chunk$set(echo = TRUE)
(9.2-9.5)/(1.1/sqrt(20))
(9.2-9.5)/(1.1/sqrt(20))
#Conduct one-sample t-test
t.test(reaction.times, mu = 300)
#Conduct one-sample t-test
t.test(mu = 300)
?qt
#Conduct one-sample t-test
t.test(reaction.times, mu = 300)
#t-statistic
(9.2-9.5)/(1.1/sqrt(20))
#p-value
2*pt(t, 19)
#t-statistic
t <- (9.2-9.5)/(1.1/sqrt(20))
#p-value
2*pt(t, 19)
t.test(temps, mu = 98.6)
#t-statistic
temps <- c(98, 98.9, 99, 98.9, 98.8, 98.6, 99.1, 98.9, 98.5,
98.9, 98.9, 98.4, 99, 99.2, 98.6, 98.8, 98.9, 98.7)
t.test(temps, mu = 98.6)
temps <- c(98.0, 98.9, 99.0, 98.9, 98.8, 98.6, 99.1, 98.9, 98.5,
98.9, 98.9, 98.4, 99.0, 99.2, 98.6, 98.8, 98.9, 98.7)
t.test(temps, mu = 98.6)
(mean(temps)-98.6)/(sd(temps)/sqrt(18))
2*pt(2.744959, 18)
2*pt(2.744959, 17)
#t-statistic
t <- (9.2-9.5)/(1.1/sqrt(20))
t
#p-value
2*pt(t, 19)
2*pt(2.744959, 17)
2*pt(-2.744959, 17)
#t-statistic
temps <- c(98.0, 98.9, 99.0, 98.9, 98.8, 98.6, 99.1, 98.9, 98.5,
98.9, 98.9, 98.4, 99.0, 99.2, 98.6, 98.8, 98.9, 98.7)
t.test(temps, mu = 98.6)
a <- c(8.53, 8.52, 8.01, 7.99, 7.93, 7.89, 7.85, 7.82, 7.80)
b <- c(7.85, 7.73, 7.58, 7.40, 7.35, 7.30, 7.27, 7.27, 7.23)
t.test(a, b)
a <- c(8.53, 8.52, 8.01, 7.99, 7.93, 7.89, 7.85, 7.82, 7.80)
b <- c(7.85, 7.73, 7.58, 7.40, 7.35, 7.30, 7.27, 7.27, 7.23)
t.test(a, b)
prop.test(c(38, 31), n= c(505, 773))
head(a)
library(openintro)
View(email)
email.model <- glm(spam ~ to , data = email, family = "binomial")
step(email.model)
email.model.mango <- glm(formula = spam ~ to_multiple + from + sent_email + time +
image + attach + dollar + winner + inherit + viagra + password +
num_char + line_breaks + format + re_subj + urgent_subj +
exclaim_mess + number, family = "binomial", data = email)
summary(email.model.mango)
email.model.final <- glm(spam ~ to_multiple + number, data = email)
summary(email.model.final)
View(email)
summary(email.model.final)
?email
stepAIC(email.model.mango, direction = "forward")
#email data in the openintro package
library(openintro)
stepAIC(email.model.mango, direction = "forward")
library(MASS)
stepAIC(email.model.mango, direction = "forward")
summary(email.model.final)
emails <- email
emails$spam <- factor(spam)
emails <- email
emails$spam <- factor(spam)
#email data in the openintro package
library(openintro)
emails <- email
emails$spam <- factor(spam)
?factor
emails$spam <- factor(emails$spam)
teal.model <- glm(spam ~ to_multiple + number + winner,
data = emails)
AIC(teal.model)
teal.model <- glm(spam ~ to_multiple + number + winner,
data = emails)
emails$spam <- factor(spam)
emails$spam <- factor(emails$spam)
teal.model <- glm(spam ~ to_multiple + number + winner,
family = "binomial",
data = emails)
AIC(teal.model)
emails$to_multiple <- factor(emails$to_multiple)
teal.model <- glm(spam ~ to_multiple + number + winner,
family = "binomial",
data = emails)
to.vals <- seq(c(0,1), times = 2)
to.vals <- rep(c(0,1), times = 2)
to.vals
win.vals <- rep(c(0,1), each = 2)
win.vals
?predict.glm
predicted.probs <- predict.glm(teal.model, data.frame(to_multiple = to.vals,
winner = winner.vals),
type = "response")
to.vals <- rep(rep(c(0,1), times = 2),3)
win.vals <- rep(rep(c(0,1), each = 2),3)
number.vals <- rep(c("none", "small", "big"), each = 4)
predicted.probs <- predict.glm(teal.model, data.frame(to_multiple = to.vals,
winner = win.vals,
number = number.vals),
type = "response")
to.vals <- rep(rep(c("0","1"), times = 2),3)
win.vals <- rep(rep(c("no","yes"), each = 2),3)
number.vals <- rep(c("none", "small", "big"), each = 4)
predicted.probs <- predict.glm(teal.model, data.frame(to_multiple = to.vals,
winner = win.vals,
number = number.vals),
type = "response")
predicted.probs
toy.data %>%
ggplot(aes(x = winner, y = predicted.probs)) +
geom_bar(stat = "identity")
library(tidyverse)
toy.data %>%
ggplot(aes(x = winner, y = predicted.probs)) +
geom_bar(stat = "identity")
toy.data <- data.frame(to_multiple = to.vals, winner = win.vals,
number = number.vals, prediction = predicted.probs)
toy.data %>%
ggplot(aes(x = winner, y = predicted.probs)) +
geom_bar(stat = "identity")
toy.data %>%
ggplot(aes(x = winner, y = predicted.probs)) +
geom_bar(aes(fill = number), stat = "identity")
toy.data %>%
ggplot(aes(x = winner, y = predicted.probs)) +
geom_bar(aes(fill = number), stat = "identity", position = dodge)
toy.data %>%
ggplot(aes(x = winner, y = predicted.probs)) +
geom_bar(aes(fill = number), stat = "identity", position = "dodge")
toy.data %>%
ggplot(aes(x = winner, y = predicted.probs)) +
geom_bar(aes(fill = number), stat = "identity", position = "dodge") +
facet_wrap(~to_multiple)
knitr::opts_chunk$set(echo = TRUE)
summary(teal.model)
emails %>%
sample_n(10) %>%
kable()
library(stargazer)
install.packages("stargazer")
library(stargazer)
stargazer(teal.model, type = "html")
library(stargazer)
stargazer(teal.model, type = "html")
```{r, results = 'asis'}
library(stargazer)
stargazer(teal.model, type = "html")
#Titanic data
titanic <- read.csv(file.choose())
View(titanic)
#Is there an association between class and survival?
table(titanic$Class, titanic$Survived)
#Is there an association between class and survival?
class.surv.table <- table(titanic$Class, titanic$Survived)
chisq.test(class.surv.table)
#Is there an association between class and survival?
class.surv.table <- table(titanic$Class, titanic$Survived)
class.surv.table
mosaicplot(class.surv.table, shade = TRUE)
## Day 26, 4/23/18
pnorm(124.5, 125, 15, lower.tail = FALSE)
## Day 26, 4/23/18
pnorm(124, 125, 15, lower.tail = FALSE)
## Day 26, 4/23/18
pnorm(124.75, 125, 15, lower.tail = FALSE)
## Day 26, 4/23/18
pnorm(124.99, 125, 15, lower.tail = FALSE)
## Day 26, 4/23/18
pnorm(124.5, 125, 15, lower.tail = FALSE)
## Day 26, 4/23/18
pnorm(100, 125, 15, lower.tail = FALSE)
## Day 26, 4/23/18
pnorm(50, 125, 15, lower.tail = FALSE)
## Day 26, 4/23/18
pnorm(75, 125, 15, lower.tail = FALSE)
## Day 26, 4/23/18
pnorm(90, 125, 15, lower.tail = FALSE)
## Day 26, 4/23/18
pnorm(100, 125, 15, lower.tail = FALSE)
## Day 26, 4/23/18
pnorm(95, 125, 15, lower.tail = FALSE)
## Day 26, 4/23/18
pnorm(95, 130, 15, lower.tail = FALSE)
power <- NULL
for (i in 90:200) {
power[i] <- pnorm(i, 125, 15, lower.tail = FALSE)
}
power
View(power)
plot(power)
power <- NULL
for (i in 0:200) {
power[i] <- pnorm(i, 125, 15, lower.tail = FALSE)
}
plot(power)
pnorm(0, 125, 15, lower.tail = FALSE)
pnorm(1, 125, 15, lower.tail = FALSE)
power <- NULL
for (i in 1:50) {
power[i] <- pnorm(124.5, 120 + i, 15, lower.tail = FALSE)
}
plot(power)
?pnorm
power[i] <- pnorm(124.5, 120 + i, 15/sqrt(30), lower.tail = FALSE)
power <- NULL
for (i in 1:50) {
power[i] <- pnorm(124.5, 120 + i, 15/sqrt(30), lower.tail = FALSE)
}
plot(power)
x<-seq(from = 120, to = 150, by = .1)
x<-seq(from = 120, to = 150, by = .1)
plot(x-120, pnorm(124.5, x, 15/sqrt(30)), lower.tail = FALSE)
x <- seq(from = 120, to = 150, by = .1)
plot(x-120, pnorm(124.5, x, 15/sqrt(30)), lower.tail = FALSE)
x <- seq(from = 120, to = 150, by = .1)
plot(x-120, pnorm(124.5, x, 15/sqrt(30), lower.tail = FALSE))
warnings()
probs <- NULL
reject.vals <- NULL
for (i in 1:20) {
for(j in 1:1000) {
samp <- rnorm(30, 120 + i, 15/sqrt(30))
x.bar <- mean(samp)
reject.vals[j] <- 124.5 < x.bar
}
probs[i] <- mean(reject.vals)
}
probs
plot(1:20, probs)
probs <- NULL
reject.vals <- NULL
for (i in 1:20) {
for(j in 1:1000) {
samp <- rnorm(30, 120 + i, 15)
x.bar <- mean(samp)
reject.vals[j] <- 124.5 < x.bar
}
probs[i] <- mean(reject.vals)
}
plot(1:20, probs)
par(mfrow = c(1,2))
library(ggplot2)
setwd("andre/OneDrive/datascience/datamil-vietnam-war-thor-data")
setwd("C:/Users/andre/OneDrive/datascience/datamil-vietnam-war-thor-data")
library(CamelUp)
library(tidyverse)
library(CamelUp)
install.packages("camelUp")
library(CamelUp)
install.packages("CamelUp")
install.packages("CamelUp")
library(CamelUp)
library(CamelUp)
playCamelUp()
install.packages("tinyverse")
install.packages("tidyverse")
setwd("C:/Users/andre/OneDrive/datascience/VietnamWar/gittest")
map1 <-
get_map(location = "Vietnam",
source = "google",
maptype = "terrain",
zoom = 5,
crop = FALSE)
airforce1 <-
vietnam.bob %>%
filter(COUNTRYFLYINGMISSION == "UNITED STATES OF AMERICA") %>%
filter(year(MSNDATE) == 1973)
ggmap(map1) +
geom_point(aes(x = TGTLON, y = TGTLAT),
data = airforce1,
alpha = .1,
color = "darkred",
size = .05) +
coord_fixed(xlim = c(100, 111),
ylim = c(7.5, 23.5)) +
labs(title = "U.S. Bombing Missions in 1973",
x = "Longitude",
y = "Latitude")
library(tidyverse)
library(ggplot2)
library(data.table)
library(leaflet)
library(ggmap)
library(lubridate)
library(stringi)
library(tidyverse)
library(ggplot2)
library(data.table)
library(leaflet)
library(ggmap)
library(lubridate)
library(stringi)
install.packages("stringi", dependencies = FALSE)
install.packages("stringi", dependencies = FALSE)
install.packages("yaml", dependencies = TRUE)
install.packages("yaml", dependencies = TRUE)
map1 <-
get_map(location = "Vietnam",
source = "google",
maptype = "terrain",
zoom = 5,
crop = FALSE)
?register_google
register_google(key = "AIzaSyCzEGHzEAkVx6YwDH6rsg2hMAreuLWepPQ")
map1 <-
get_map(location = "Vietnam",
source = "google",
maptype = "terrain",
zoom = 5,
crop = FALSE)
airforce1 <-
vietnam.bob %>%
filter(COUNTRYFLYINGMISSION == "UNITED STATES OF AMERICA") %>%
filter(year(MSNDATE) == 1973)
ggmap(map1) +
geom_point(aes(x = TGTLON, y = TGTLAT),
data = airforce1,
alpha = .1,
color = "darkred",
size = .05) +
coord_fixed(xlim = c(100, 111),
ylim = c(7.5, 23.5)) +
labs(title = "U.S. Bombing Missions in 1973",
x = "Longitude",
y = "Latitude")
library(tidyverse)
library(ggplot2)
library(data.table)
library(leaflet)
library(ggmap)
library(lubridate)
library(stringi)
install.packages("stringi", dependencies = FALSE)
install.packages("yaml", dependencies = TRUE)
setwd("~/Documents/Documents/College/Spring 2018/Data Science/Vietnam War/datamil-vietnam-war-thor-data/original")
vietnam <- fread("thor_data_vietnam.csv")
vietnam$MSNDATE <-
vietnam$MSNDATE %>%
as.Date()
vietnam <-
vietnam %>%
select(-THOR_DATA_VIET_ID, -SOURCEID, -SOURCERECORD,
-TGTORIGCOORDS, -TGTORIGCOORDSFORMAT, -ADDITIONALINFO,
-GEOZONE, -ID, -CALLSIGN, -AIRCRAFT_ORIGINAL, -AIRFORCEGROUP, -AIRFORCESQDN,
-UNIT, -TGTID)
colnames(vietnam)[6] <- "TGTLAT"
colnames(vietnam)[7] <- "TGTLON"
a<-year(vietnam$MSNDATE)
b<-month(vietnam$MSNDATE)
vietnam$MONTH <-
floor_date(vietnam$MSNDATE, unit = "month")
vietnam.bob <-
vietnam %>%
filter(NUMWEAPONSDELIVERED > 0)
small <- vietnam.bob %>%
sample_n(100)
sum(vietnam.bob$WEAPONSLOADEDWEIGHT)/2000
sum(vietnam.bob$WEAPONTYPEWEIGHT * vietnam.bob$NUMWEAPONSDELIVERED * vietnam.bob$NUMOFACFT)/2000
sum(vietnam$WEAPONSLOADEDWEIGHT)/2000
vietnam %>%
ggplot(aes(x = COUNTRYFLYINGMISSION)) +
geom_bar(stat = "count")
m <-
vietnam.bob %>%
count(TGTTYPE)
m$pct <- prop.table(m$n) * 100
#bob <-
m %>%
arrange(desc(pct)) %>%
filter(pct > 3) %>%
filter(TGTTYPE != "")
vietnam %>%
ggplot(mapping = aes(x = MSNDATE,
y = WEAPONSLOADEDWEIGHT)) +
geom_area() +
scale_x_date() +
theme_minimal() +
theme(legend.position = "bottom") +
scale_fill_brewer(palette = "Spectral") +
labs(title = "Pounds of explosive per day",
x = "Date",
y = "Weightload")
vietnam.bob %>%
filter(COUNTRYFLYINGMISSION != "") %>%
ggplot(mapping = aes(x = MONTH,
fill = COUNTRYFLYINGMISSION)) +
geom_area(stat = "count", position = "fill") +
scale_x_date() +
theme_minimal() +
theme(legend.position = "bottom") +
scale_fill_brewer(palette = "Spectral") +
labs(title = "Daily bombings by country",
x = "Date",
y = "Instances")
vietnam.bob %>%
filter(TGTCOUNTRY == "SOUTH VIETNAM" | TGTCOUNTRY == "NORTH VIETNAM") %>%
filter(COUNTRYFLYINGMISSION == "UNITED STATES OF AMERICA") %>%
ggplot(aes(x=MSNDATE, y=NUMWEAPONSDELIVERED*WEAPONTYPEWEIGHT/2000)) +
geom_bar(stat = "identity") +
scale_x_date() +
facet_wrap(~TGTCOUNTRY) +
theme_minimal() +
labs(title = "American Bombs by Target Country",
x = "Date",
y = "Approximate Tonnage of Bombs Dropped")
vietnam.bob %>%
ggplot(mapping = aes(x = MONTH)) +
geom_area(stat = "count") +
theme_minimal() +
theme(legend.position = "bottom") +
labs(title = "Total strikes per month",
x = "Date",
y = "Strikes")
vietnam.bob %>%
filter(PERIODOFDAY == "D" | PERIODOFDAY == "N") %>%
ggplot(mapping = aes(x = MSNDATE,
fill = PERIODOFDAY)) +
geom_area(stat = "count", position = "fill") +
scale_x_date() +
theme_minimal() +
install.packages("yaml", dependencies = TRUE)
install.packages("stringi", dependencies = FALSE)
install.packages("stringi", dependencies = FALSE)
register_google(key = "AIzaSyCzEGHzEAkVx6YwDH6rsg2hMAreuLWepPQ")
map1 <-
get_map(location = "Vietnam",
source = "google",
maptype = "terrain",
zoom = 5,
crop = FALSE)
airforce1 <-
vietnam.bob %>%
filter(COUNTRYFLYINGMISSION == "UNITED STATES OF AMERICA") %>%
filter(year(MSNDATE) == 1973)
ggmap(map1) +
geom_point(aes(x = TGTLON, y = TGTLAT),
data = airforce1,
alpha = .1,
color = "darkred",
size = .05) +
coord_fixed(xlim = c(100, 111),
ylim = c(7.5, 23.5)) +
labs(title = "U.S. Bombing Missions in 1973",
x = "Longitude",
y = "Latitude")
